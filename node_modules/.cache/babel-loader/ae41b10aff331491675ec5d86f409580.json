{"ast":null,"code":"var _jsxFileName = \"/Users/decagon/Desktop/Ecommerce-Projects/FashionHub/src/components/Products.js\",\n  _s = $RefreshSig$();\nimport { Button, Stack, Avatar } from \"@mui/material\";\nimport { Search, SentimentDissatisfied } from \"@mui/icons-material\";\nimport { CircularProgress, Grid, Card, InputAdornment, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState, useCallBack } from \"react\";\nimport { config } from \"../App\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport \"./Products.css\";\nimport ProductCard from \"./ProductCard\";\nimport Cart, { generateCartItemsFrom } from \"./Cart\";\n\n// Definition of Data Structures used\n/**\n * @typedef {Object} Product - Data on product available to buy\n * \n * @property {string} name - The name or title of the product\n * @property {string} category - The category that the product belongs to\n * @property {number} cost - The price to buy the product\n * @property {number} rating - The aggregate rating of the product (integer out of five)\n * @property {string} image - Contains URL for the product image\n * @property {string} _id - Unique ID for the product\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  const [productData, updateProduct] = useState([]);\n  const [isFetching, updateFecthed] = useState(false);\n  const [productNotFound, updateProductNotFound] = useState(false);\n  const [timerId, udpateTimerId] = useState(\"\");\n  const [userLoggedIn, updateUserLoggedIn] = useState(false);\n  const [cartData, updateCartData] = useState([]);\n  const [userCartItems, updateUserCartItems] = useState([]);\n  const [userToken, updateUserToken] = useState(\"\");\n\n  // TODO: CRIO_TASK_MODULE_PRODUCTS - Fetch products data and store it\n  /**\n   * Make API call to get the products list and store it to display the products\n   *\n   * @returns { Array.<Product> }\n   *      Array of objects with complete data on all available products\n   *\n   * API endpoint - \"GET /products\"\n   *\n   * Example for successful response from backend:\n   * HTTP 200\n   * [\n   *      {\n   *          \"name\": \"iPhone XR\",\n   *          \"category\": \"Phones\",\n   *          \"cost\": 100,\n   *          \"rating\": 4,\n   *          \"image\": \"https://i.imgur.com/lulqWzW.jpg\",\n   *          \"_id\": \"v4sLtEcMpzabRyfx\"\n   *      },\n   *      {\n   *          \"name\": \"Basketball\",\n   *          \"category\": \"Sports\",\n   *          \"cost\": 100,\n   *          \"rating\": 5,\n   *          \"image\": \"https://i.imgur.com/lulqWzW.jpg\",\n   *          \"_id\": \"upLK9JbQ4rMhTwt4\"\n   *      }\n   * ]\n   *\n   * Example for failed response from backend:\n   * HTTP 500\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Something went wrong. Check the backend console for more details\"\n   * }\n   */\n  const performAPICall = async () => {\n    try {\n      updateFecthed(true);\n      let url = config.endpoint;\n      let product = await axios.get(`${url}/products`);\n      updateProduct(product.data);\n      updateFecthed(false);\n      return product.data;\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  // TODO: CRIO_TASK_MODULE_PRODUCTS - Implement search logic\n  /**\n   * Definition for search handler\n   * This is the function that is called on adding new search keys\n   *\n   * @param {string} text\n   *    Text user types in the search bar. To filter the displayed products based on this text.\n   *\n   * @returns { Array.<Product> }\n   *      Array of objects with complete data on filtered set of products\n   *\n   * API endpoint - \"GET /products/search?value=<search-query>\"\n   *\n   */\n  const performSearch = async text => {\n    try {\n      // updateProductNotFound(false)\n      let url = config.endpoint;\n      let product = await axios.get(`${url}/products/search?value=${text}`).catch(e => {\n        updateProductNotFound(true);\n      });\n      if (product.data) {\n        updateProductNotFound(false);\n        updateProduct(product.data);\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  // TODO: CRIO_TASK_MODULE_PRODUCTS - Optimise API calls with debounce search implementation\n  /**\n   * Definition for debounce handler\n   * With debounce, this is the function to be called whenever the user types text in the searchbar field\n   *\n   * @param {{ target: { value: string } }} event\n   *    JS event object emitted from the search input field\n   *\n   * @param {NodeJS.Timeout} debounceTimeout\n   *    Timer id set for the previous debounce call\n   *\n   */\n  const debounceSearch = (event, debounceTimeout) => {\n    clearTimeout(debounceTimeout);\n    // wait for 500 ms and make a call\n    // 1st request\n    let timerId = setTimeout(() => performSearch(event), 500);\n    udpateTimerId(timerId);\n  };\n  useEffect(() => {\n    async function onLoad() {\n      const product = await performAPICall();\n      let user = localStorage.getItem('username');\n      {\n        user && updateUserLoggedIn(true);\n      }\n      let token = localStorage.getItem('token');\n      if (token) {\n        updateUserToken(token);\n        const cartItems = await fetchCart(token);\n        //console.log()\n        updateUserCartItems(cartItems); // Array of objects with productId and quantity of products in cart\n        const cartData = await generateCartItemsFrom(cartItems, product);\n        updateCartData(cartData);\n      }\n    }\n    onLoad();\n  }, []);\n\n  /**\n     * Perform the API call to fetch the user's cart and return the response\n     *\n     * @param {string} token - Authentication token returned on login\n     *\n     * @returns { Array.<{ productId: string, qty: number }> | null }\n     *    The response JSON object\n     *\n     * Example for successful response from backend:\n     * HTTP 200\n     * [\n     *      {\n     *          \"productId\": \"KCRwjF7lN97HnEaY\",\n     *          \"qty\": 3\n     *      },\n     *      {\n     *          \"productId\": \"BW0jAAeDJmlZCF8i\",\n     *          \"qty\": 1\n     *      }\n     * ]\n     *\n     * Example for failed response from backend:\n     * HTTP 401\n     * {\n     *      \"success\": false,\n     *      \"message\": \"Protected route, Oauth2 Bearer token not found\"\n     * }\n     */\n  const fetchCart = async token => {\n    if (!token) return;\n    try {\n      // TODO: CRIO_TASK_MODULE_CART - Pass Bearer token inside \"Authorization\" header to get data from \"GET /cart\" API and return the response data\n      let url = config.endpoint + '/cart';\n      let cartDatas = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return cartDatas.data;\n    } catch (e) {\n      if (e.response && e.response.status === 400) {\n        enqueueSnackbar(e.response.data.message, {\n          variant: \"error\"\n        });\n      } else {\n        enqueueSnackbar(\"Could not fetch cart details. Check that the backend is running, reachable and returns valid JSON.\", {\n          variant: \"error\"\n        });\n      }\n      return null;\n    }\n  };\n\n  // TODO: CRIO_TASK_MODULE_CART - Return if a product already exists in the cart\n  /**\n   * Return if a product already is present in the cart\n   *\n   * @param { Array.<{ productId: String, quantity: Number }> } items\n   *    Array of objects with productId and quantity of products in cart\n   * @param { String } productId\n   *    Id of a product to be checked\n   *\n   * @returns { Boolean }\n   *    Whether a product of given \"productId\" exists in the \"items\" array\n   *\n   */\n  const isItemInCart = (items, productId) => {\n    // items is whole data array\n    for (let i = 0; i < items.length; i++) {\n      // console.log(items[i])\n      if (items[i]['_id'] === productId) {\n        enqueueSnackbar('Item already in cart. Use the cart sidebar to update quantity or remove item.', {\n          variant: \"warning\"\n        });\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Perform the API call to add or update items in the user's cart and update local cart data to display the latest cart\n   *\n   * @param {string} token\n   *    Authentication token returned on login\n   * @param { Array.<{ productId: String, quantity: Number }> } items\n   *    Array of objects with productId and quantity of products in cart\n   * @param { Array.<Product> } products\n   *    Array of objects with complete data on all available products\n   * @param {string} productId\n   *    ID of the product that is to be added or updated in cart\n   * @param {number} qty\n   *    How many of the product should be in the cart\n   * @param {boolean} options\n   *    If this function was triggered from the product card's \"Add to Cart\" button\n   *\n   * Example for successful response from backend:\n   * HTTP 200 - Updated list of cart items\n   * [\n   *      {\n   *          \"productId\": \"KCRwjF7lN97HnEaY\",\n   *          \"qty\": 3\n   *      },\n   *      {\n   *          \"productId\": \"BW0jAAeDJmlZCF8i\",\n   *          \"qty\": 1\n   *      }\n   * ]\n   *\n   * Example for failed response from backend:\n   * HTTP 404 - On invalid productId\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Product doesn't exist\"\n   * }\n   */\n  const addToCart = async function (token, items, products, productId, qty) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      preventDuplicate: false\n    };\n    if (options.preventDuplicate === true) {\n      try {\n        let url = config.endpoint + '/cart';\n        let res = await axios.post(url, {\n          \"productId\": productId,\n          \"qty\": qty\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const cartData = await generateCartItemsFrom(res.data, products);\n        updateCartData(cartData);\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      // udpate only quantity\n      // items.qty++\n      let index;\n      for (let i = 0; i < items.length; i++) {\n        if (items[i]['productId'] === productId) {\n          index = i;\n        }\n      }\n      if (options.preventDuplicate === 'handleAdd') {\n        items[index]['qty']++;\n      } else {\n        items[index]['qty']--;\n      }\n      //  udpate ite4ms\n      let url = config.endpoint + '/cart';\n      let res = await axios.post(url, {\n        \"productId\": productId,\n        \"qty\": items[index][\"qty\"]\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const cartData = await generateCartItemsFrom(res.data, products);\n      updateCartData(cartData);\n    }\n  };\n  let addItems = e => {\n    {\n      !userLoggedIn && enqueueSnackbar(\"Login to add an item to the Cart\", {\n        variant: \"warning\"\n      });\n    }\n    ;\n    if (userLoggedIn) {\n      let result = isItemInCart(cartData, e.target.value);\n      if (!result) {\n        addToCart(userToken, userCartItems, productData, e.target.value, 1, {\n          preventDuplicate: true\n        });\n      } else {\n        enqueueSnackbar('Item already in cart. Use the cart sidebar to update quantity or remove item.', {\n          variant: \"warning\"\n        });\n      }\n    }\n  };\n  const onButtonClick = (id, handle) => {\n    console.log(\"Button Click\");\n    console.log(id, handle);\n    // token, items,products,productId,qty,options = { preventDuplicate: false }\n    addToCart(userToken, userCartItems, productData, id, null, {\n      preventDuplicate: handle\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      hasHiddenAuthButtons: false,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"search-desktop\",\n        size: \"small\",\n        onChange: e => {\n          debounceSearch(e.target.value, timerId);\n        },\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(Search, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        },\n        placeholder: \"Search for items/categories\",\n        name: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"search-mobile\",\n      size: \"small\",\n      fullWidth: true,\n      onChange: e => {\n        debounceSearch(e.target.value, timerId);\n      },\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)\n      },\n      placeholder: \"Search for items/categories\",\n      name: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"product-grid\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: \"hero\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hero-heading\",\n            children: [\"India\\u2019s \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hero-highlight\",\n              children: \"FASTEST DELIVERY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 24\n            }, this), \" \", \"to your door step\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 8\n    }, this), isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 20\n    }, this) : !productNotFound ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !userLoggedIn ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: {\n            xs: 2,\n            md: 3,\n            lg: 1\n          },\n          children: productData.map(x => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 3,\n            md: 6,\n            sm: 6,\n            xs: 6,\n            mt: 2,\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(ProductCard, {\n              product: x,\n              handleAddToCart: e => {\n                addItems(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 27\n            }, this)\n          }, x['_id'], false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: {\n            xs: 2,\n            md: 3,\n            lg: 1\n          },\n          md: 9,\n          children: productData.map(x => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 4,\n            sm: 6,\n            xs: 6,\n            mt: 2,\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(ProductCard, {\n              product: x,\n              handleAddToCart: e => {\n                addItems(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 31\n            }, this)\n          }, x['_id'], false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          md: 3,\n          sm: 12,\n          xs: 12,\n          sx: {\n            backgroundColor: '#E9F5E1'\n          },\n          children: /*#__PURE__*/_jsxDEV(Cart, {\n            product: productData,\n            items: cartData,\n            handleQuantity: onButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(SentimentDissatisfied, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No products found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n};\n_s(Products, \"+Mvl2sh3Oi3j5ws8oaIDlJJrISo=\", false, function () {\n  return [useSnackbar];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["Button","Stack","Avatar","Search","SentimentDissatisfied","CircularProgress","Grid","Card","InputAdornment","TextField","Box","axios","useSnackbar","React","useEffect","useState","useCallBack","config","Footer","Header","ProductCard","Cart","generateCartItemsFrom","jsxDEV","_jsxDEV","Fragment","_Fragment","Products","_s","enqueueSnackbar","closeSnackbar","productData","updateProduct","isFetching","updateFecthed","productNotFound","updateProductNotFound","timerId","udpateTimerId","userLoggedIn","updateUserLoggedIn","cartData","updateCartData","userCartItems","updateUserCartItems","userToken","updateUserToken","performAPICall","url","endpoint","product","get","data","e","console","log","message","performSearch","text","catch","debounceSearch","event","debounceTimeout","clearTimeout","setTimeout","onLoad","user","localStorage","getItem","token","cartItems","fetchCart","cartDatas","headers","Authorization","response","status","variant","isItemInCart","items","productId","i","length","addToCart","products","qty","options","arguments","undefined","preventDuplicate","res","post","index","addItems","result","target","value","onButtonClick","id","handle","children","hasHiddenAuthButtons","className","size","onChange","InputProps","endAdornment","position","color","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","name","fullWidth","container","justifyContent","item","spacing","xs","md","lg","map","x","sm","mt","mb","handleAddToCart","sx","backgroundColor","handleQuantity","_c","$RefreshReg$"],"sources":["/Users/decagon/Desktop/Ecommerce-Projects/FashionHub/src/components/Products.js"],"sourcesContent":["import { Button, Stack,Avatar } from \"@mui/material\";\nimport { Search, SentimentDissatisfied } from \"@mui/icons-material\";\nimport {\n  CircularProgress,\n  Grid,\n  Card,\n  InputAdornment,\n  TextField,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState ,useCallBack} from \"react\";\nimport { config } from \"../App\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport \"./Products.css\";\nimport ProductCard from \"./ProductCard\";\nimport Cart,{generateCartItemsFrom} from \"./Cart\";\n\n// Definition of Data Structures used\n/**\n * @typedef {Object} Product - Data on product available to buy\n * \n * @property {string} name - The name or title of the product\n * @property {string} category - The category that the product belongs to\n * @property {number} cost - The price to buy the product\n * @property {number} rating - The aggregate rating of the product (integer out of five)\n * @property {string} image - Contains URL for the product image\n * @property {string} _id - Unique ID for the product\n */\n\n\nconst Products = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [productData,updateProduct]=useState([]);\n  const [isFetching,updateFecthed]=useState(false);\n  const [productNotFound,updateProductNotFound]=useState(false);\n  const [timerId,udpateTimerId]=useState(\"\");\n  const [userLoggedIn,updateUserLoggedIn]=useState(false);\n  const [cartData,updateCartData]=useState([]);\n  const [userCartItems,updateUserCartItems]=useState([]);\n  const [userToken,updateUserToken]=useState(\"\");\n\n  // TODO: CRIO_TASK_MODULE_PRODUCTS - Fetch products data and store it\n  /**\n   * Make API call to get the products list and store it to display the products\n   *\n   * @returns { Array.<Product> }\n   *      Array of objects with complete data on all available products\n   *\n   * API endpoint - \"GET /products\"\n   *\n   * Example for successful response from backend:\n   * HTTP 200\n   * [\n   *      {\n   *          \"name\": \"iPhone XR\",\n   *          \"category\": \"Phones\",\n   *          \"cost\": 100,\n   *          \"rating\": 4,\n   *          \"image\": \"https://i.imgur.com/lulqWzW.jpg\",\n   *          \"_id\": \"v4sLtEcMpzabRyfx\"\n   *      },\n   *      {\n   *          \"name\": \"Basketball\",\n   *          \"category\": \"Sports\",\n   *          \"cost\": 100,\n   *          \"rating\": 5,\n   *          \"image\": \"https://i.imgur.com/lulqWzW.jpg\",\n   *          \"_id\": \"upLK9JbQ4rMhTwt4\"\n   *      }\n   * ]\n   *\n   * Example for failed response from backend:\n   * HTTP 500\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Something went wrong. Check the backend console for more details\"\n   * }\n   */\n  const performAPICall = async () => {\n    try{\n      updateFecthed(true)\n      let url=config.endpoint;\n     let product= await axios.get(`${url}/products`);\n     updateProduct(product.data);\n     updateFecthed(false);\n     return product.data;\n    }catch(e){\n      console.log(e.message)\n    }\n  \n  };\n\n  // TODO: CRIO_TASK_MODULE_PRODUCTS - Implement search logic\n  /**\n   * Definition for search handler\n   * This is the function that is called on adding new search keys\n   *\n   * @param {string} text\n   *    Text user types in the search bar. To filter the displayed products based on this text.\n   *\n   * @returns { Array.<Product> }\n   *      Array of objects with complete data on filtered set of products\n   *\n   * API endpoint - \"GET /products/search?value=<search-query>\"\n   *\n   */\n  const performSearch = async (text) => {\n    try{\n      // updateProductNotFound(false)\n      let url=config.endpoint;\n     let product= await axios.get(`${url}/products/search?value=${text}`).catch((e)=>{updateProductNotFound(true)})\n     \n     if(product.data){\n      updateProductNotFound(false);\n      updateProduct(product.data);\n     }\n    }catch(e){\n      console.log(e.message)\n    }\n  };\n\n  // TODO: CRIO_TASK_MODULE_PRODUCTS - Optimise API calls with debounce search implementation\n  /**\n   * Definition for debounce handler\n   * With debounce, this is the function to be called whenever the user types text in the searchbar field\n   *\n   * @param {{ target: { value: string } }} event\n   *    JS event object emitted from the search input field\n   *\n   * @param {NodeJS.Timeout} debounceTimeout\n   *    Timer id set for the previous debounce call\n   *\n   */\n  const debounceSearch = (event, debounceTimeout) => {\n    clearTimeout(debounceTimeout);\n    // wait for 500 ms and make a call\n    // 1st request\n    let timerId = setTimeout(() => performSearch(event), 500);\n    udpateTimerId(timerId);\n  };\n\n  useEffect( ()=>{\n    async function onLoad(){\n       const product=await performAPICall();\n      let user=localStorage.getItem('username');\n      {user && updateUserLoggedIn(true)} \n      let token=localStorage.getItem('token');\n      if(token){\n        updateUserToken(token);\n        const cartItems=await fetchCart(token);\n        //console.log()\n        updateUserCartItems(cartItems);// Array of objects with productId and quantity of products in cart\n        const cartData=await generateCartItemsFrom(cartItems,product)\n        updateCartData(cartData);\n      }\n    }\n    onLoad();\n  },[])\n\n \n\n\n/**\n   * Perform the API call to fetch the user's cart and return the response\n   *\n   * @param {string} token - Authentication token returned on login\n   *\n   * @returns { Array.<{ productId: string, qty: number }> | null }\n   *    The response JSON object\n   *\n   * Example for successful response from backend:\n   * HTTP 200\n   * [\n   *      {\n   *          \"productId\": \"KCRwjF7lN97HnEaY\",\n   *          \"qty\": 3\n   *      },\n   *      {\n   *          \"productId\": \"BW0jAAeDJmlZCF8i\",\n   *          \"qty\": 1\n   *      }\n   * ]\n   *\n   * Example for failed response from backend:\n   * HTTP 401\n   * {\n   *      \"success\": false,\n   *      \"message\": \"Protected route, Oauth2 Bearer token not found\"\n   * }\n   */\n const fetchCart = async (token) => {\n  if (!token) return;\n\n  try {\n    // TODO: CRIO_TASK_MODULE_CART - Pass Bearer token inside \"Authorization\" header to get data from \"GET /cart\" API and return the response data\n   let url=config.endpoint+'/cart';\n   let cartDatas=await axios.get(url,{headers:{Authorization:`Bearer ${token}`}});\n   return cartDatas.data;\n\n  } catch (e) {\n    if (e.response && e.response.status === 400) {\n      enqueueSnackbar(e.response.data.message, { variant: \"error\" });\n    } else {\n      enqueueSnackbar(\n        \"Could not fetch cart details. Check that the backend is running, reachable and returns valid JSON.\",\n        {\n          variant: \"error\",\n        }\n      );\n    }\n    return null;\n  }\n};\n\n\n// TODO: CRIO_TASK_MODULE_CART - Return if a product already exists in the cart\n/**\n * Return if a product already is present in the cart\n *\n * @param { Array.<{ productId: String, quantity: Number }> } items\n *    Array of objects with productId and quantity of products in cart\n * @param { String } productId\n *    Id of a product to be checked\n *\n * @returns { Boolean }\n *    Whether a product of given \"productId\" exists in the \"items\" array\n *\n */\nconst isItemInCart = (items, productId) => {\n  // items is whole data array\n  for(let i=0;i<items.length;i++){\n    // console.log(items[i])\n      if(items[i]['_id']===productId){\n        enqueueSnackbar('Item already in cart. Use the cart sidebar to update quantity or remove item.',{variant:\"warning\"});\n        return true;\n      }\n  }\n  return false;\n};\n\n/**\n * Perform the API call to add or update items in the user's cart and update local cart data to display the latest cart\n *\n * @param {string} token\n *    Authentication token returned on login\n * @param { Array.<{ productId: String, quantity: Number }> } items\n *    Array of objects with productId and quantity of products in cart\n * @param { Array.<Product> } products\n *    Array of objects with complete data on all available products\n * @param {string} productId\n *    ID of the product that is to be added or updated in cart\n * @param {number} qty\n *    How many of the product should be in the cart\n * @param {boolean} options\n *    If this function was triggered from the product card's \"Add to Cart\" button\n *\n * Example for successful response from backend:\n * HTTP 200 - Updated list of cart items\n * [\n *      {\n *          \"productId\": \"KCRwjF7lN97HnEaY\",\n *          \"qty\": 3\n *      },\n *      {\n *          \"productId\": \"BW0jAAeDJmlZCF8i\",\n *          \"qty\": 1\n *      }\n * ]\n *\n * Example for failed response from backend:\n * HTTP 404 - On invalid productId\n * {\n *      \"success\": false,\n *      \"message\": \"Product doesn't exist\"\n * }\n */\nconst addToCart = async (token, items,products,productId,qty,options = { preventDuplicate: false }) => {\n\n      if(options.preventDuplicate===true){\n        try{\n            let url=config.endpoint+'/cart';\n            let res=await axios.post(url,{\"productId\":productId,\"qty\":qty},{headers:{Authorization:`Bearer ${token}`}});\n            const cartData=await generateCartItemsFrom(res.data,products)\n            updateCartData(cartData);\n\n        }catch(e){\n          console.log(e)\n        }\n      }\n      else {\n            // udpate only quantity\n            // items.qty++\n            let index;\n            for(let i=0;i<items.length;i++){\n              if(items[i]['productId']===productId){\n                index=i;\n              }\n            }\n            if(options.preventDuplicate==='handleAdd'){\n              items[index]['qty']++;\n            }\n            else{\n                items[index]['qty']--;\n            }\n            //  udpate ite4ms\n            let url=config.endpoint+'/cart';\n            let res=await axios.post(url,{\"productId\":productId,\"qty\":items[index][\"qty\"]},{headers:{Authorization:`Bearer ${token}`}});\n            const cartData=await generateCartItemsFrom(res.data,products)\n            updateCartData(cartData);\n      }\n};\n\n\nlet addItems=(e)=>{\n  {!userLoggedIn && enqueueSnackbar(\"Login to add an item to the Cart\",{variant:\"warning\"}) };\n  if(userLoggedIn){\n    let result=isItemInCart(cartData,e.target.value)\n    if(!result){\n      addToCart(userToken,userCartItems,productData,e.target.value,1,{preventDuplicate: true});\n    }else{\n      enqueueSnackbar('Item already in cart. Use the cart sidebar to update quantity or remove item.',{variant:\"warning\"});\n    }\n  }\n  \n  \n}\n\nconst onButtonClick=(id,handle)=>{\n  console.log(\"Button Click\")\n  console.log(id,handle)\n// token, items,products,productId,qty,options = { preventDuplicate: false }\n  addToCart(userToken,userCartItems,productData,id,null, { preventDuplicate: handle })\n};\n\n  return (\n    <div>\n      <Header  hasHiddenAuthButtons={false}>\n        {/* TODO: CRIO_TASK_MODULE_PRODUCTS - Display search bar in the header for Products page */}\n        <TextField\n        className=\"search-desktop\"\n        size=\"small\"\n        onChange={(e)=>{debounceSearch(e.target.value,timerId)}}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Search color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n        placeholder=\"Search for items/categories\"\n        name=\"search\"\n      />\n\n      </Header>\n\n      {/* Search view for mobiles */}\n      <TextField\n        className=\"search-mobile\"\n        size=\"small\"\n        fullWidth\n        onChange={(e)=>{debounceSearch(e.target.value,timerId)}}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Search color=\"primary\" />\n            </InputAdornment>\n          ),\n        }}\n        placeholder=\"Search for items/categories\"\n        name=\"search\"\n      />\n\n       <Grid container justifyContent=\"center\" >\n         <Grid item className=\"product-grid\">\n           <Box className=\"hero\">\n             <p className=\"hero-heading\">\n               India’s <span className=\"hero-highlight\">FASTEST DELIVERY</span>{\" \"}\n               to your door step\n             </p>\n           </Box>\n         </Grid>\n       </Grid>\n\n      \n      {\n        isFetching?<div className={\"loading\"}>\n                      <CircularProgress />\n                      <h3>Loading Products</h3>\n                    </div>\n                  : !productNotFound?\n                  <>\n                  {\n                    !userLoggedIn?\n                    <Grid container >\n                    <Grid container spacing={{ xs: 2, md: 3 ,lg:1 }} >\n                      {productData.map((x)=>\n                         (<Grid item lg={3} md={6} sm={6} xs={6} mt={2} mb={2} key={x['_id']}  >\n                          <ProductCard product={x} handleAddToCart={(e)=>{addItems(e)}}/>\n                        </Grid>\n                        )\n                        )}\n                    </Grid>\n                  </Grid>:\n                        <Grid container  >\n                        <Grid container spacing={{ xs: 2, md: 3 ,lg:1 }} md={9} >\n                          {productData.map((x)=>\n                             (<Grid item lg={4} md={4} sm={6} xs={6} mt={2} mb={2} key={x['_id']}  >\n                              <ProductCard product={x} handleAddToCart={(e)=>{addItems(e)}}/>\n                            </Grid>\n                            )\n                            )}\n                        </Grid>\n                        <Grid md={3} sm={12} xs={12} sx={{backgroundColor:'#E9F5E1'}} >\n                           <Cart product={productData} items={cartData} handleQuantity={onButtonClick}  />\n                           {/* handleQuantity={onButtonClick} */}\n                        </Grid>\n                      </Grid>\n                  }\n                  </>\n                    :<div className={\"loading\"}>\n                    <SentimentDissatisfied/>\n                    <h3>No products found</h3>\n                  </div>          \n      }\n      <Footer />\n    </div>\n  );\n};\n\nexport default Products;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAACC,MAAM,QAAQ,eAAe;AACpD,SAASC,MAAM,EAAEC,qBAAqB,QAAQ,qBAAqB;AACnE,SACEC,gBAAgB,EAChBC,IAAI,EACJC,IAAI,EACJC,cAAc,EACdC,SAAS,QACJ,eAAe;AACtB,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,WAAW;AACvC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAC9D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,IAAEC,qBAAqB,QAAO,QAAQ;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAYA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,eAAe;IAAEC;EAAc,CAAC,GAAGlB,WAAW,CAAC,CAAC;EACxD,MAAM,CAACmB,WAAW,EAACC,aAAa,CAAC,GAACjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,UAAU,EAACC,aAAa,CAAC,GAACnB,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACoB,eAAe,EAACC,qBAAqB,CAAC,GAACrB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACsB,OAAO,EAACC,aAAa,CAAC,GAACvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,YAAY,EAACC,kBAAkB,CAAC,GAACzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,QAAQ,EAACC,cAAc,CAAC,GAAC3B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4B,aAAa,EAACC,mBAAmB,CAAC,GAAC7B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC8B,SAAS,EAACC,eAAe,CAAC,GAAC/B,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMgC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAG;MACDb,aAAa,CAAC,IAAI,CAAC;MACnB,IAAIc,GAAG,GAAC/B,MAAM,CAACgC,QAAQ;MACxB,IAAIC,OAAO,GAAE,MAAMvC,KAAK,CAACwC,GAAG,CAAE,GAAEH,GAAI,WAAU,CAAC;MAC/ChB,aAAa,CAACkB,OAAO,CAACE,IAAI,CAAC;MAC3BlB,aAAa,CAAC,KAAK,CAAC;MACpB,OAAOgB,OAAO,CAACE,IAAI;IACpB,CAAC,QAAMC,CAAC,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,OAAO,CAAC;IACxB;EAEF,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpC,IAAG;MACD;MACA,IAAIV,GAAG,GAAC/B,MAAM,CAACgC,QAAQ;MACxB,IAAIC,OAAO,GAAE,MAAMvC,KAAK,CAACwC,GAAG,CAAE,GAAEH,GAAI,0BAAyBU,IAAK,EAAC,CAAC,CAACC,KAAK,CAAEN,CAAC,IAAG;QAACjB,qBAAqB,CAAC,IAAI,CAAC;MAAA,CAAC,CAAC;MAE9G,IAAGc,OAAO,CAACE,IAAI,EAAC;QACfhB,qBAAqB,CAAC,KAAK,CAAC;QAC5BJ,aAAa,CAACkB,OAAO,CAACE,IAAI,CAAC;MAC5B;IACD,CAAC,QAAMC,CAAC,EAAC;MACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,OAAO,CAAC;IACxB;EACF,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMI,cAAc,GAAGA,CAACC,KAAK,EAAEC,eAAe,KAAK;IACjDC,YAAY,CAACD,eAAe,CAAC;IAC7B;IACA;IACA,IAAIzB,OAAO,GAAG2B,UAAU,CAAC,MAAMP,aAAa,CAACI,KAAK,CAAC,EAAE,GAAG,CAAC;IACzDvB,aAAa,CAACD,OAAO,CAAC;EACxB,CAAC;EAEDvB,SAAS,CAAE,MAAI;IACb,eAAemD,MAAMA,CAAA,EAAE;MACpB,MAAMf,OAAO,GAAC,MAAMH,cAAc,CAAC,CAAC;MACrC,IAAImB,IAAI,GAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACzC;QAACF,IAAI,IAAI1B,kBAAkB,CAAC,IAAI,CAAC;MAAA;MACjC,IAAI6B,KAAK,GAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACvC,IAAGC,KAAK,EAAC;QACPvB,eAAe,CAACuB,KAAK,CAAC;QACtB,MAAMC,SAAS,GAAC,MAAMC,SAAS,CAACF,KAAK,CAAC;QACtC;QACAzB,mBAAmB,CAAC0B,SAAS,CAAC,CAAC;QAC/B,MAAM7B,QAAQ,GAAC,MAAMnB,qBAAqB,CAACgD,SAAS,EAACpB,OAAO,CAAC;QAC7DR,cAAc,CAACD,QAAQ,CAAC;MAC1B;IACF;IACAwB,MAAM,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;;EAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAMM,SAAS,GAAG,MAAOF,KAAK,IAAK;IAClC,IAAI,CAACA,KAAK,EAAE;IAEZ,IAAI;MACF;MACD,IAAIrB,GAAG,GAAC/B,MAAM,CAACgC,QAAQ,GAAC,OAAO;MAC/B,IAAIuB,SAAS,GAAC,MAAM7D,KAAK,CAACwC,GAAG,CAACH,GAAG,EAAC;QAACyB,OAAO,EAAC;UAACC,aAAa,EAAE,UAASL,KAAM;QAAC;MAAC,CAAC,CAAC;MAC9E,OAAOG,SAAS,CAACpB,IAAI;IAEtB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,IAAIA,CAAC,CAACsB,QAAQ,IAAItB,CAAC,CAACsB,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3C/C,eAAe,CAACwB,CAAC,CAACsB,QAAQ,CAACvB,IAAI,CAACI,OAAO,EAAE;UAAEqB,OAAO,EAAE;QAAQ,CAAC,CAAC;MAChE,CAAC,MAAM;QACLhD,eAAe,CACb,oGAAoG,EACpG;UACEgD,OAAO,EAAE;QACX,CACF,CAAC;MACH;MACA,OAAO,IAAI;IACb;EACF,CAAC;;EAGD;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACzC;IACA,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,KAAK,CAACG,MAAM,EAACD,CAAC,EAAE,EAAC;MAC7B;MACE,IAAGF,KAAK,CAACE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAGD,SAAS,EAAC;QAC7BnD,eAAe,CAAC,+EAA+E,EAAC;UAACgD,OAAO,EAAC;QAAS,CAAC,CAAC;QACpH,OAAO,IAAI;MACb;IACJ;IACA,OAAO,KAAK;EACd,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMM,SAAS,GAAG,eAAAA,CAAOd,KAAK,EAAEU,KAAK,EAACK,QAAQ,EAACJ,SAAS,EAACK,GAAG,EAA2C;IAAA,IAA1CC,OAAO,GAAAC,SAAA,CAAAL,MAAA,QAAAK,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG;MAAEE,gBAAgB,EAAE;IAAM,CAAC;IAE5F,IAAGH,OAAO,CAACG,gBAAgB,KAAG,IAAI,EAAC;MACjC,IAAG;QACC,IAAIzC,GAAG,GAAC/B,MAAM,CAACgC,QAAQ,GAAC,OAAO;QAC/B,IAAIyC,GAAG,GAAC,MAAM/E,KAAK,CAACgF,IAAI,CAAC3C,GAAG,EAAC;UAAC,WAAW,EAACgC,SAAS;UAAC,KAAK,EAACK;QAAG,CAAC,EAAC;UAACZ,OAAO,EAAC;YAACC,aAAa,EAAE,UAASL,KAAM;UAAC;QAAC,CAAC,CAAC;QAC3G,MAAM5B,QAAQ,GAAC,MAAMnB,qBAAqB,CAACoE,GAAG,CAACtC,IAAI,EAACgC,QAAQ,CAAC;QAC7D1C,cAAc,CAACD,QAAQ,CAAC;MAE5B,CAAC,QAAMY,CAAC,EAAC;QACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB;IACF,CAAC,MACI;MACC;MACA;MACA,IAAIuC,KAAK;MACT,KAAI,IAAIX,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,KAAK,CAACG,MAAM,EAACD,CAAC,EAAE,EAAC;QAC7B,IAAGF,KAAK,CAACE,CAAC,CAAC,CAAC,WAAW,CAAC,KAAGD,SAAS,EAAC;UACnCY,KAAK,GAACX,CAAC;QACT;MACF;MACA,IAAGK,OAAO,CAACG,gBAAgB,KAAG,WAAW,EAAC;QACxCV,KAAK,CAACa,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;MACvB,CAAC,MACG;QACAb,KAAK,CAACa,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE;MACzB;MACA;MACA,IAAI5C,GAAG,GAAC/B,MAAM,CAACgC,QAAQ,GAAC,OAAO;MAC/B,IAAIyC,GAAG,GAAC,MAAM/E,KAAK,CAACgF,IAAI,CAAC3C,GAAG,EAAC;QAAC,WAAW,EAACgC,SAAS;QAAC,KAAK,EAACD,KAAK,CAACa,KAAK,CAAC,CAAC,KAAK;MAAC,CAAC,EAAC;QAACnB,OAAO,EAAC;UAACC,aAAa,EAAE,UAASL,KAAM;QAAC;MAAC,CAAC,CAAC;MAC3H,MAAM5B,QAAQ,GAAC,MAAMnB,qBAAqB,CAACoE,GAAG,CAACtC,IAAI,EAACgC,QAAQ,CAAC;MAC7D1C,cAAc,CAACD,QAAQ,CAAC;IAC9B;EACN,CAAC;EAGD,IAAIoD,QAAQ,GAAExC,CAAC,IAAG;IAChB;MAAC,CAACd,YAAY,IAAIV,eAAe,CAAC,kCAAkC,EAAC;QAACgD,OAAO,EAAC;MAAS,CAAC,CAAC;IAAC;IAAC;IAC3F,IAAGtC,YAAY,EAAC;MACd,IAAIuD,MAAM,GAAChB,YAAY,CAACrC,QAAQ,EAACY,CAAC,CAAC0C,MAAM,CAACC,KAAK,CAAC;MAChD,IAAG,CAACF,MAAM,EAAC;QACTX,SAAS,CAACtC,SAAS,EAACF,aAAa,EAACZ,WAAW,EAACsB,CAAC,CAAC0C,MAAM,CAACC,KAAK,EAAC,CAAC,EAAC;UAACP,gBAAgB,EAAE;QAAI,CAAC,CAAC;MAC1F,CAAC,MAAI;QACH5D,eAAe,CAAC,+EAA+E,EAAC;UAACgD,OAAO,EAAC;QAAS,CAAC,CAAC;MACtH;IACF;EAGF,CAAC;EAED,MAAMoB,aAAa,GAACA,CAACC,EAAE,EAACC,MAAM,KAAG;IAC/B7C,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAAC2C,EAAE,EAACC,MAAM,CAAC;IACxB;IACEhB,SAAS,CAACtC,SAAS,EAACF,aAAa,EAACZ,WAAW,EAACmE,EAAE,EAAC,IAAI,EAAE;MAAET,gBAAgB,EAAEU;IAAO,CAAC,CAAC;EACtF,CAAC;EAEC,oBACE3E,OAAA;IAAA4E,QAAA,gBACE5E,OAAA,CAACL,MAAM;MAAEkF,oBAAoB,EAAE,KAAM;MAAAD,QAAA,eAEnC5E,OAAA,CAACf,SAAS;QACV6F,SAAS,EAAC,gBAAgB;QAC1BC,IAAI,EAAC,OAAO;QACZC,QAAQ,EAAGnD,CAAC,IAAG;UAACO,cAAc,CAACP,CAAC,CAAC0C,MAAM,CAACC,KAAK,EAAC3D,OAAO,CAAC;QAAA,CAAE;QACxDoE,UAAU,EAAE;UACVC,YAAY,eACVlF,OAAA,CAAChB,cAAc;YAACmG,QAAQ,EAAC,KAAK;YAAAP,QAAA,eAC5B5E,OAAA,CAACrB,MAAM;cAACyG,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAEpB,CAAE;QACFC,WAAW,EAAC,6BAA6B;QACzCC,IAAI,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM,CAAC,eAGTxF,OAAA,CAACf,SAAS;MACR6F,SAAS,EAAC,eAAe;MACzBC,IAAI,EAAC,OAAO;MACZY,SAAS;MACTX,QAAQ,EAAGnD,CAAC,IAAG;QAACO,cAAc,CAACP,CAAC,CAAC0C,MAAM,CAACC,KAAK,EAAC3D,OAAO,CAAC;MAAA,CAAE;MACxDoE,UAAU,EAAE;QACVC,YAAY,eACVlF,OAAA,CAAChB,cAAc;UAACmG,QAAQ,EAAC,KAAK;UAAAP,QAAA,eAC5B5E,OAAA,CAACrB,MAAM;YAACyG,KAAK,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAEpB,CAAE;MACFC,WAAW,EAAC,6BAA6B;MACzCC,IAAI,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eAEDxF,OAAA,CAAClB,IAAI;MAAC8G,SAAS;MAACC,cAAc,EAAC,QAAQ;MAAAjB,QAAA,eACrC5E,OAAA,CAAClB,IAAI;QAACgH,IAAI;QAAChB,SAAS,EAAC,cAAc;QAAAF,QAAA,eACjC5E,OAAA,CAACd,GAAG;UAAC4F,SAAS,EAAC,MAAM;UAAAF,QAAA,eACnB5E,OAAA;YAAG8E,SAAS,EAAC,cAAc;YAAAF,QAAA,GAAC,eAClB,eAAA5E,OAAA;cAAM8E,SAAS,EAAC,gBAAgB;cAAAF,QAAA,EAAC;YAAgB;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAAC,GAAG,EAAC,mBAEvE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAIN/E,UAAU,gBAACT,OAAA;MAAK8E,SAAS,EAAE,SAAU;MAAAF,QAAA,gBACvB5E,OAAA,CAACnB,gBAAgB;QAAAwG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBxF,OAAA;QAAA4E,QAAA,EAAI;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,GACN,CAAC7E,eAAe,gBAClBX,OAAA,CAAAE,SAAA;MAAA0E,QAAA,EAEE,CAAC7D,YAAY,gBACbf,OAAA,CAAClB,IAAI;QAAC8G,SAAS;QAAAhB,QAAA,eACf5E,OAAA,CAAClB,IAAI;UAAC8G,SAAS;UAACG,OAAO,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAC;UAAE,CAAE;UAAAtB,QAAA,EAC7CrE,WAAW,CAAC4F,GAAG,CAAEC,CAAC,iBACfpG,OAAA,CAAClB,IAAI;YAACgH,IAAI;YAACI,EAAE,EAAE,CAAE;YAACD,EAAE,EAAE,CAAE;YAACI,EAAE,EAAE,CAAE;YAACL,EAAE,EAAE,CAAE;YAACM,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAAA3B,QAAA,eACpD5E,OAAA,CAACJ,WAAW;cAAC8B,OAAO,EAAE0E,CAAE;cAACI,eAAe,EAAG3E,CAAC,IAAG;gBAACwC,QAAQ,CAACxC,CAAC,CAAC;cAAA;YAAE;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC,GADLY,CAAC,CAAC,KAAK,CAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE9D,CAEN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBACDxF,OAAA,CAAClB,IAAI;QAAC8G,SAAS;QAAAhB,QAAA,gBACf5E,OAAA,CAAClB,IAAI;UAAC8G,SAAS;UAACG,OAAO,EAAE;YAAEC,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAE,CAAC;YAAEC,EAAE,EAAC;UAAE,CAAE;UAACD,EAAE,EAAE,CAAE;UAAArB,QAAA,EACpDrE,WAAW,CAAC4F,GAAG,CAAEC,CAAC,iBACfpG,OAAA,CAAClB,IAAI;YAACgH,IAAI;YAACI,EAAE,EAAE,CAAE;YAACD,EAAE,EAAE,CAAE;YAACI,EAAE,EAAE,CAAE;YAACL,EAAE,EAAE,CAAE;YAACM,EAAE,EAAE,CAAE;YAACC,EAAE,EAAE,CAAE;YAAA3B,QAAA,eACpD5E,OAAA,CAACJ,WAAW;cAAC8B,OAAO,EAAE0E,CAAE;cAACI,eAAe,EAAG3E,CAAC,IAAG;gBAACwC,QAAQ,CAACxC,CAAC,CAAC;cAAA;YAAE;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC,GADLY,CAAC,CAAC,KAAK,CAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE9D,CAEN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACPxF,OAAA,CAAClB,IAAI;UAACmH,EAAE,EAAE,CAAE;UAACI,EAAE,EAAE,EAAG;UAACL,EAAE,EAAE,EAAG;UAACS,EAAE,EAAE;YAACC,eAAe,EAAC;UAAS,CAAE;UAAA9B,QAAA,eAC1D5E,OAAA,CAACH,IAAI;YAAC6B,OAAO,EAAEnB,WAAY;YAACgD,KAAK,EAAEtC,QAAS;YAAC0F,cAAc,EAAElC;UAAc;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,gBAET,CAAC,gBACAxF,OAAA;MAAK8E,SAAS,EAAE,SAAU;MAAAF,QAAA,gBAC3B5E,OAAA,CAACpB,qBAAqB;QAAAyG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxBxF,OAAA;QAAA4E,QAAA,EAAI;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAElBxF,OAAA,CAACN,MAAM;MAAA2F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACpF,EAAA,CA7YID,QAAQ;EAAA,QAC+Bf,WAAW;AAAA;AAAAwH,EAAA,GADlDzG,QAAQ;AA+Yd,eAAeA,QAAQ;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}